{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% set image_left = content.field_controller_position['#items'].value == 0 %}
{% set image_right = not image_left %}
{% set bg_white = content.field_background_color['#items'].value == 0 %}

{% set color_mode = bg_white
  ? "text-black"
  : "text-white"
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}

      {% if bg_white %}
      <section class="bg-white">
      {% else %}
      <section class="bg-gray-900">
      {% endif %}

        <div class="grid max-w-screen-xl px-4 py-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12">

          {% if image_left %}
            <div class="hidden mr-8 lg:mt-0 lg:col-span-5 lg:flex">
              <img class="h-96 w-full" src="{{ image_url }}" alt={{ alt_text }}>
            </div>
          {% endif %}

          <div class="mr-auto px-4 sm:pr-7 place-self-center lg:col-span-7">

            {% if content.field_title  %}
              <h2 class="max-w-2xl mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl {{ color_mode }}">
                {{ content.field_title }}
              </h2>
            {% endif %}

            {% if content.field_description %}
              {{ content.field_description }}
            {% endif %}

            {% if content.field_button_left|render %}
              <div class="inline-flex items-center justify-center px-5 py-3 mr-3 text-base font-medium text-center text-white rounded-lg bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300">
                {{ content.field_button_left }}
                <svg class="w-5 h-5 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
              </div>
            {% endif %}

            {% if content.field_button_right|render %}
              <div class="inline-flex items-center justify-center px-5 py-3 text-base font-medium text-center focus:ring-4 border-2 border-zinc-600rounded-lg {{ color_mode }}">
                {{ content.field_button_right }}
              </div>
            {% endif %}
          </div>

          {% if image_right %}
            <div class="hidden lg:mt-0 lg:col-span-5 lg:flex">
              <img class="h-96 w-full" src="{{ image_url }}" alt={{ alt_text }}>
            </div>
          {% endif %}

        </div>
      </section>
    {% endblock %}
  </div>
{% endblock paragraph %}
