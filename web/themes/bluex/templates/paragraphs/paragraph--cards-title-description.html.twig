{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set iconMapping = {
    'heart_signal': 'M22 12h-4l-3 9L9 3l-3 9H2',
    'scissors': 'M20 4L8.12 15.88M14.47 14.48L20 20M8.12 8.12L12 12',
    'user': 'M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2',
    'flag': 'M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1zM4 22v-7',
    'moon': 'M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z',
    'shield': 'M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z',
    'anchor': 'M12 22V8M5 12H2a10 10 0 0020 0h-3',
    'download': 'M20.88 18.09A5 5 0 0018 9h-1.26A8 8 0 103 16.29',
    'headphones': 'M21 19a2 2 0 01-2 2h-1a2 2 0 01-2-2v-3a2 2 0 012-2h3zM3 19a2 2 0 002 2h1a2 2 0 002-2v-3a2 2 0 00-2-2H3z',
  }
%}

{% set icon = iconMapping[content.field_icons.0['#title']] %}

{% set extraicons = {
  'scissors': '<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle>',
  'anchor': '<circle cx="12" cy="5" r="3"></circle>',
  'download': '<path d="M8 17l4 4 4-4m-4-5v9"></path>',
  'headphones': '<path d="M3 18v-6a9 9 0 0118 0v6"></path>',
  'user': '<circle cx="12" cy="7" r="4"></circle>',
} %}

{% set extraicon_top = extraicons[content.field_icons.0['#title']] ?? '' %}

{% if content.field_icons.0['#title'] == "user" %}
  {% set extraicon_bottom = '<circle cx="12" cy="7" r="4"></circle>' %}
{% endif %}

{% block paragraph %}
  {% block content %}
      <div class="xl:w-1/3 md:w-1/2 p-4">
        <div class="h-52 p-6 rounded-lg shadow {{ background_color }}">

          {% if icon|render %}
            <div class="w-10 h-10 inline-flex items-center justify-center rounded-full bg-indigo-100 text-indigo-500 mb-4">
              <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-6 h-6" viewBox="0 0 24 24">
                {{ extraicon_top|raw }}
                <path d="{{ icon }}"></path>
                {{ extraicon_bottom|raw }}
              </svg>
            </div>
          {% endif %}

          <h2 class="text-lg font-medium title-font mb-2 {{ text_color }}">{{ content.field_short_title }}</h2>
          <p class="leading-relaxed text-base">{{ content.field_short_description }}</p>

        </div>
      </div>
  {% endblock %}
{% endblock paragraph %}

